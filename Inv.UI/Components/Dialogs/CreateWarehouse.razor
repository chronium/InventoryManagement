@using Inv.UI.Services
@using Microsoft.FluentUI.AspNetCore.Components.Icons.Regular
@implements IDialogContentComponent

@inject WarehouseApiClient WarehouseApi

@rendermode InteractiveServer

@* Header *@
<FluentDialogHeader ShowDismiss="true">
    <FluentStack VerticalAlignment="VerticalAlignment.Center">
        <FluentIcon Value="@(new Size24.WindowApps())"/>
        <FluentLabel Typo="Typography.PaneHeader">
            @Dialog.Instance.Parameters.Title
        </FluentLabel>
    </FluentStack>
</FluentDialogHeader>

@* Footer *@
<FluentDialogFooter>
    <FluentButton Appearance="Appearance.Accent" OnClick="@SaveAsync"
                  Disabled="@(string.IsNullOrEmpty(name))">Save
    </FluentButton>
    <FluentButton Appearance="Appearance.Neutral" OnClick="@CancelAsync">Cancel</FluentButton>
</FluentDialogFooter>

@* Body *@
<FluentDialogBody>
    <FluentStack Orientation="Orientation.Vertical">
        <FluentTextField @bind-Value="name" Label="Name" Required="true" Style="width: 100%"/>
    </FluentStack>
</FluentDialogBody>

@code {
    [CascadingParameter] public FluentDialog Dialog { get; set; } = default!;

    string? name;

    private async Task SaveAsync()
    {
        if (string.IsNullOrEmpty(name))
            return;

        await WarehouseApi.CreateWarehouse(new(name));
        await Dialog.CloseAsync();
    }

    private async Task CancelAsync()
    {
        await Dialog.CancelAsync();
    }

}